
CREATE TABLE IF NOT EXISTS public.registration_fee_marhala_counts (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    registration_fee_collection_id UUID NOT NULL REFERENCES public.registration_fee_collections(id) ON DELETE CASCADE,
    marhala_id UUID NOT NULL REFERENCES public.marhalas(id) ON DELETE RESTRICT,
    regular_students INTEGER NOT NULL CHECK (regular_students >= 0),
    irregular_students INTEGER NOT NULL CHECK (irregular_students >= 0),
    calculated_fee_for_marhala NUMERIC(10, 2) NOT NULL CHECK (calculated_fee_for_marhala >= 0),
    registration_number_range_start INTEGER, 
    registration_number_range_end INTEGER,   
    created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,
    
    CONSTRAINT unique_rfc_marhala_count UNIQUE (registration_fee_collection_id, marhala_id),
    CONSTRAINT check_reg_no_range CHECK (
      (registration_number_range_start IS NULL AND registration_number_range_end IS NULL) OR -- Both can be NULL if no students
      (registration_number_range_start IS NOT NULL AND registration_number_range_end IS NOT NULL AND registration_number_range_start <= registration_number_range_end) -- If not NULL, start <= end
    )
);

-- Indexes
CREATE INDEX IF NOT EXISTS idx_rfmc_collection_id ON public.registration_fee_marhala_counts(registration_fee_collection_id);
CREATE INDEX IF NOT EXISTS idx_rfmc_marhala_id ON public.registration_fee_marhala_counts(marhala_id);

-- Note: No separate updated_at needed here typically as these are line items created with the parent.
-- If individual counts can be updated later, then add updated_at and its trigger.
