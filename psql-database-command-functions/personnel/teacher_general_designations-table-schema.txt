-- Function to handle 'updated_at' column automatically
-- Ensure this function is created if it doesn't exist, or if it's different from your existing one.
CREATE OR REPLACE FUNCTION public.handle_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- ===================================================================
-- Table: teacher_general_designations
-- Purpose: Store general designations for teachers, e.g., Mumtahin eligibility.
-- ===================================================================
CREATE TABLE IF NOT EXISTS public.teacher_general_designations (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    teacher_id UUID NOT NULL REFERENCES public.teachers(id) ON DELETE CASCADE,
    designation TEXT NOT NULL CHECK (designation IN ('MUMTAHIN_ELIGIBLE')), -- Can be extended later
    created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,
    updated_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,
    CONSTRAINT unique_teacher_designation UNIQUE (teacher_id, designation)
);

COMMENT ON TABLE public.teacher_general_designations IS 'Stores general designations for teachers, such as eligibility for specific roles like Mumtahin (examiner).';
COMMENT ON COLUMN public.teacher_general_designations.teacher_id IS 'Foreign key referencing the teachers table.';
COMMENT ON COLUMN public.teacher_general_designations.designation IS 'The specific designation assigned (e.g., MUMTAHIN_ELIGIBLE).';

-- Trigger for 'updated_at' on teacher_general_designations
DROP TRIGGER IF EXISTS on_teacher_general_designations_updated ON public.teacher_general_designations;
CREATE TRIGGER on_teacher_general_designations_updated
BEFORE UPDATE ON public.teacher_general_designations
FOR EACH ROW
EXECUTE FUNCTION public.handle_updated_at();

-- Row Level Security for teacher_general_designations
ALTER TABLE public.teacher_general_designations ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Allow admin full access for teacher_general_designations"
  ON public.teacher_general_designations
  FOR ALL TO authenticated
  USING ((SELECT role FROM public.user_profiles WHERE id = auth.uid()) IN ('admin', 'super_admin'))
  WITH CHECK ((SELECT role FROM public.user_profiles WHERE id = auth.uid()) IN ('admin', 'super_admin'));