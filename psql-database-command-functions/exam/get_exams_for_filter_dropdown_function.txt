CREATE OR REPLACE FUNCTION public.get_exams_for_filter_dropdown(
    p_page INTEGER DEFAULT 1,
    p_limit INTEGER DEFAULT 10,
    p_search_term TEXT DEFAULT NULL
)
RETURNS JSONB -- Returns { items: SelectOption[], totalItems: number }
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
    _query TEXT;
    _count_query TEXT;
    _offset INTEGER;
    _total_items INTEGER;
    _items_jsonb JSONB;
    _where_clause TEXT := 'WHERE TRUE'; -- Removed is_active filter to show all exams
BEGIN
    _offset := (p_page - 1) * p_limit;

    IF p_search_term IS NOT NULL AND p_search_term <> '' THEN
        _where_clause := _where_clause || format(' AND name ILIKE %L', '%' || p_search_term || '%');
    END IF;

    _count_query := 'SELECT COUNT(*) FROM public.exams ' || _where_clause;
    EXECUTE _count_query INTO _total_items;

    _query := '
        SELECT jsonb_agg(jsonb_build_object(''value'', id, ''label'', name))
        FROM (
            SELECT id, name
            FROM public.exams
            ' || _where_clause || '
            ORDER BY created_at DESC -- Show most recent exams first
            LIMIT ' || p_limit || ' OFFSET ' || _offset || '
        ) AS subquery';
    
    EXECUTE _query INTO _items_jsonb;

    RETURN jsonb_build_object('items', COALESCE(_items_jsonb, '[]'::jsonb), 'totalItems', _total_items);
END;
$$;

GRANT EXECUTE ON FUNCTION public.get_exams_for_filter_dropdown(INTEGER, INTEGER, TEXT) TO authenticated;