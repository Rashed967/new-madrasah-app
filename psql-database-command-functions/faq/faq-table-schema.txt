-- Create the faqs table
CREATE TABLE faqs (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  question TEXT NOT NULL,
  answer TEXT NOT NULL,
  order_index INT DEFAULT 0 NOT NULL,
  is_active BOOLEAN DEFAULT TRUE NOT NULL,
  created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,
  updated_at TIMESTAMPTZ DEFAULT NOW() NOT NULL
);

-- Enable Row Level Security for the faqs table
ALTER TABLE faqs ENABLE ROW LEVEL SECURITY;

-- Create policy for public read access for active FAQs
CREATE POLICY "Allow public read for active faqs" ON faqs FOR SELECT USING (is_active = TRUE);

-- Create policy for admin full access
CREATE POLICY "Allow admin full access" ON faqs FOR ALL USING (auth.role() = 'authenticated') WITH CHECK (auth.role() = 'authenticated');

-- Function to set updated_at timestamp automatically
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$
LANGUAGE 'plpgsql';

CREATE TRIGGER update_faqs_updated_at
BEFORE UPDATE ON faqs
FOR EACH ROW
EXECUTE FUNCTION update_updated_at_column(); 